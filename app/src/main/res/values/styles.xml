<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">
    <style name="RoundedMaterialButton" parent="Widget.MaterialComponents.Button">
        <item name="textAllCaps">false</item>
        <item name="cornerRadius">100dp</item>
        <item name="android:textColor">#456DB0</item>
    </style>

    <style name="GradientButtonStyle" parent="Widget.AppCompat.Button">
        <item name="android:background">@drawable/rounded_gradient_button</item>
        <item name="android:textColor">#FFFFFF</item>
        <item name="android:fontFamily">@font/robotomono_bold</item>
        <item name="android:textSize">15sp</item>
        <item name="android:gravity">center</item>
        <item name="android:elevation">5dp</item>
    </style>
    <style name="CustomSpinnerDialogTheme" parent="ThemeOverlay.MaterialComponents.Dialog.Alert">
        <!-- Ustawiamy, aby dialog (Spinner) korzystał z naszego stylu alertDialogTheme -->
        <item name="android:alertDialogTheme">@style/CustomAlertDialogStyle</item>
    </style>

    <style name="CustomAlertDialogStyle" parent="ThemeOverlay.MaterialComponents.Dialog.Alert">
        <!-- Tutaj możesz ustawić kolor, gradient lub drawable jako tło okna dialogowego -->
        <item name="android:windowBackground">@drawable/rounded_button</item>

        <!-- Jeśli chcesz zmienić kolor samego „obszaru” w dialogu (np. tła listy) -->
        <item name="android:colorBackgroundFloating">@drawable/rounded_button</item>

        <!-- Przykładowe atrybuty do dostosowania wyglądu tekstu w dialogu: -->
        <!-- <item name="android:textColorPrimary">@android:color/white</item> -->
        <!-- <item name="android:textColorSecondary">@android:color/darker_gray</item> -->
    </style>

</resources>